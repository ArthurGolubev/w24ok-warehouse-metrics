"""
Django settings for w24ok2 project.

Generated by 'django-admin startproject' using Django 3.2.3.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""

import os
from pathlib import Path
from datetime import timedelta
from notifiers.logging import NotificationHandler
from loguru import logger


# try logger
w24ok_log_token = os.getenv("W24OK_LOG_TOKEN")
my_chat_id = os.getenv(f"MY_CHAT_ID")

# logger через telegram
params = {
    "token": w24ok_log_token,
    "chat_id": my_chat_id,
    "parse_mode": "html"
}

handler = NotificationHandler('telegram', defaults=params)
# logger.add(handler, level="DEBUG", enqueue=True)
# if (os.getenv('PROD_ENV') == 'True'):
#     logger.add('/volume/logs/django.json', format="{time} {level} {message}", level="DEBUG", rotation="1 MB", compression="zip", serialize=True, enqueue=True)
#     logger.add('/volume/logs/django.log', format="{time} {level} {message}", level="DEBUG", rotation="1 MB", compression="zip", enqueue=True)



# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.getenv('DJANGO_SECRET')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

env_allowed_hosts = os.getenv("ALLOWED_HOSTS", "127.0.0.1")
ALLOWED_HOSTS = env_allowed_hosts.split(' ')

GRAPHENE = {
    'SCHEMA': 'w24ok2.schema.schema',
    'MIDDLEWARE': [
        'graphql_jwt.middleware.JSONWebTokenMiddleware',
        'graphene_django.debug.DjangoDebugMiddleware',
    ],
}

CACHES = {
    "default": {
        "BACKEND": "django_redis.cache.RedisCache",
        "LOCATION": "redis://redis-service-node-port:6379/0",
        "OPTIONS": {
            "CLIENT_CLASS": "django_redis.client.DefaultClient",
        },
        "KEY_PREFIX": "w24ok-web"
    }
}
# Application definition

INSTALLED_APPS = [
    'graphene_django',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'user_token',
    'main',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    "whitenoise.middleware.WhiteNoiseMiddleware",
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware'
]

ROOT_URLCONF = 'w24ok2.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'w24ok2.wsgi.application'
ASGI_APPLICATION = 'w24ok2.asgi.application'

AUTHENTICATION_BACKENDS = [
    'graphql_jwt.backends.JSONWebTokenBackend',
    'django.contrib.auth.backends.ModelBackend',
]

# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

# logger.warning(f'{os.getenv("W24OK_DB_PASSWORD")=}')
# logger.warning(f'{os.getenv("W24OK_DB_USER")=}')
# logger.warning(f'{os.getenv("W24OK_DB_NAME")=}')
# logger.warning(f'{os.getenv("HOST_DB")=}')

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': os.getenv("W24OK_DB_NAME"),
        'USER': os.getenv("W24OK_DB_USER"),
        'PASSWORD': os.getenv("W24OK_DB_PASSWORD"),
        # 'HOST': '127.0.0.1',
        'HOST': os.getenv("HOST_DB"), # kubernetes service postgres
        'PORT': '5432'
    }
}


GRAPHQL_JWT = {
    'JWT_VERIFY_EXPIRATION': True,
    'JWT_EXPIRATION_DELTA': timedelta(days=1),
    'JWT_REFRESH_EXPIRATION_DELTA': timedelta(days=7),
}


# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Krasnoyarsk'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

STATIC_URL = '/static/'
# STATIC_URL = 'static-cdn-local/'
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'staticfiles'),
    os.path.join(BASE_DIR, 'static-cdn-local')
]
STATIC_ROOT = os.path.join(BASE_DIR, 'static-cdn-local')
logger.info(f'{STATIC_ROOT=}')
logger.info(f'{BASE_DIR=}')
logger.info(f'{os.getcwd()=}')

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
DATA_UPLOAD_MAX_NUMBER_FIELDS = 25000